Tomcat: pure Java HTTP web server environment in which Java Code can also run
        -> Java Web App Server
            -> each springboot application includes a built-in webserver

application.yaml: 
    change server config such as port

@RestController: 
    enables requests like get to work within the class where @RestController is set
@SpringBootApplication: 
    shortcut for mulitple annotations such as @ComponentScan and @EnableAutoConfiguration, fundament

JPA / Jakarta Persistance / Java Persistance:
    describes the management of relational data in enterprise Java applications
    -> maps Java classes to database table

Postgresql commands:
	login:
		psql
		psql -h localhost -p 5432 -U amigoscode -d studycards 
	
	db commands:
		\dt list of relations
		\l list of databases
		\c connect to database
		CREATE DATABASE <name>


Docker commands: 
    docker compose up -d // creates Container with the config file thats in the dir
    docker ps // list containers


CRUD operations possible coz CustomerRepository extends JpaRepo

Maven commands:
    mvn validate                        # validate correctness of pom.xml
    mvn compile                         # compile sources to: target/classes
    mvn test-compile                    # compile tests to: target/test-classes
    mvn test                            # run tests, create: target/surefire-reports
    mvn package                         # create: target/se2-freerider-0.0.1-SNAPSHOT.jar

    mvn site -DgenerateReports=false    # create css and images for: target/site
    mvn surefire-report:report          # run tests, create: target/site/index.html
    mvn site -DgenerateReports=false surefire-report:report     # do both

    mvn spring-boot:run                 # run application

    mvn clean                           # remove target directory

    mvn dependency:tree                 # show dependency tree
    mvn dependency:build-classpath      # show classpath

